use log::debug;
use dwallet_mpc::{create_sign_output, message_digest, Hash};

fn main() {
    env_logger::init();
    debug!("debug logs work");
    let DKGCentralizedOutput =
        "5HJn/xMi+E/QDzvXjx/BsnBXi30k3e15ltb1jj30LRYhA83oXYfN/+DorDro3S0KYar9iByeMRhHzWJFfgQgN9+CIQPYqXScFNI2ELmp2O8dJx+77gE1l34DaFolvGvWB9Mk+SEDdvKzebh9UryosYdf35sDc+m2ex0Xp8zA2XlDsMsFNMA=";
    let PresignFirstRoundOutput =
    "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";
    let PresignSecondRoundOutput =
    "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";

    let res = create_sign_output(
        base64::decode(DKGCentralizedOutput).unwrap(),
        base64::decode(PresignFirstRoundOutput).unwrap(),
        base64::decode(PresignSecondRoundOutput).unwrap(),
        vec![1, 2, 3, 4, 5],
        0,
        "b34f83539d7453106808a155f0d438405ce6eaa4db8a9bd614d8bda1583ed324".to_string(),
    );
}
