// create a main function copilot
use base64::decode;

fn decode_base64(input: &str) -> Vec<u8> {
    decode(input).expect("Failed to decode base64")
}
use dwallet_mpc::create_centralized_output;

fn main() {
    let example_output = "AOPuPgkDuw4/b7Rg1JdbT3J4Nx9vdx7lIXTCdBQ/MGqcUtYAvyjJgWODdhpTgRBlsVD8rwHORsLBBNYCWTpCprP0ZgCBQZwGHTdEqdX3E6JgVyeKD1qtR/Y6whgsz7pL0cMtzDYOq26/Lj86KBnBCCQFLBwVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABi/RyLEQUWyR83piolMCsMqlutGw0Eyc+XSEIaIknexWSzPHbM/3GK9WOnU7I+A707psTDvStsi+gZs7hJ/1s+qSREpd9KSqanawFj1kni98tcfg25tHDomlLqfbmujkvy8BySKdX+Daluy5svOAxABSoCA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN6GirVzdg9otxrT/JXV7oDs5eSIT2F4u6ScmHTlHQi4QEnsPkzRtVl75iAjbYXqbwdNtcuvClmIanHf+J1ciZditKGZQdx426Hj1kLVM2ChE5z47/9xS2oovl5eqJ3tk+A+f5hKU9JLzX1SgGN5fU49buxQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPf57UdiFd4LfiohMYiW8tUMo2QlX7crdi28Q/lS8YSA/vjR0dzDDy6d1cQNY+ni4i/p+n1WSO+5bDaDYT1ntKOLhoB9Jh/crquMkx/FfX7vWySwhfrOTVjiI0hLPzU/NcGgUQ1ETEfoOkefbYGeBHyU/9S2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhA6addmKxv+yCMcFuUtjf4/JwlHmgpUOLBCSdsdaotmJT";
    let example_output = decode_base64(example_output);
    let res = create_centralized_output(example_output);
    println!("{:?}", res);
}